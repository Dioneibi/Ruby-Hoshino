import fg from 'api-dylux'
import { youtubedl, youtubedlv2 } from '@bochilteam/scraper'
import yts from 'yt-search'
import fetch from 'node-fetch' 

let handler = async (m, { conn, args, usedPrefix, text, command }) => {
    let lister = ["audio", "video"]

    let [feature, inputs] = text.split(" ")
    if (!lister.includes(feature)) return conn.reply(m.chat, `üö© Ingresa el tipo de contenido (audio o video) junto con el t√≠tulo de un video de YouTube.\n\nEjemplo : ${usedPrefix + command} audio SUICIDAL-IDOL - ecstacy\n\nTipos disponibles :\n${usedPrefix + command} audio\n${usedPrefix + command} video`, m)

    if (lister.includes(feature)) {
        if (!inputs) return conn.reply(m.chat, `üö© Ingresa el t√≠tulo de un video de YouTube.\n\n*Ejemplo:*\n*${usedPrefix + command}* SUICIDAL-IDOL - ecstacy`, m)

        await m.react('üïì')
        let res = await yts(text)
        let vid = res.videos[0]
        let txt = `*‰πÇ  Y O U T U B E  -  P L A Y*\n\n`
        txt += `	‚ú©   *T√≠tulo* : ${vid.title}\n`
        txt += `	‚ú©   *Duraci√≥n* : ${vid.timestamp}\n`
        txt += `	‚ú©   *Visitas* : ${vid.views}\n`
        txt += `	‚ú©   *Autor* : ${vid.author.name}\n`
        txt += `	‚ú©   *Publicado* : ${eYear(vid.ago)}\n`
        txt += `	‚ú©   *Url* : ${'https://youtu.be/' + vid.videoId}\n\n`
        txt += `*- ‚Üª Tu archivo se est√° procesando, por favor espera.*`

        await conn.sendButton(m.chat, txt, vid.thumbnail, [
            ['ùêå ùêÑ ùêç ùêî üí•', `${usedPrefix}menu`],
            ['üî• ùóî ùó® ùóó ùóú ùó¢', `${usedPrefix}playaudio ${vid.url}`],
            ['üî• ùó© ùóú ùóó ùóò ùó¢', `${usedPrefix}playvideo ${vid.url}`]
        ], null, null, null, null)
        
        if (feature == "audio") {
            try {
                let yt = await fg.yta(vid.url, '128kbps')
                let { title, dl_url, size } = yt
                let limit = 100

                if (size.split('MB')[0] >= limit) return conn.reply(m.chat,`El archivo pesa m√°s de ${limit} MB, se cancel√≥ la descarga.`, m).then(_ => m.react('‚úñÔ∏è'))

                await conn.sendMessage(m.chat, { audio: { url: dl_url }, fileName: title + '.mp3', mimetype: 'audio/mp4' }, { quoted: m })
                await m.react('‚úÖ')
            } catch {
                await m.react('‚úñÔ∏è')
            }
        }

        if (feature == "video") {
            try {
                let yt = await fg.ytv(vid.url, '360p')
                let { title, dl_url, size } = yt
                let limit = 300

                if (size.split('MB')[0] >= limit) return conn.reply(m.chat,`El archivo pesa m√°s de ${limit} MB, se cancel√≥ la descarga.`, m).then(_ => m.react('‚úñÔ∏è'))

                await conn.sendMessage(m.chat, { document: { url: dl_url }, caption: '', mimetype: 'video/mp4', fileName: `${title}.mp4`}, {quoted: m })
                await m.react('‚úÖ')
            } catch {
                await m.react('‚úñÔ∏è')
            }
        }
    }
}

handler.help = ['play'].map(v => v + " *<tipo> <b√∫squeda>*")
handler.tags = ['downloader']
handler.command = ['play']
handler.register = true 
export default handler

function eYear(txt) {
    if (!txt) return '√ó'
    if (txt.includes('month ago')) return 'hace ' + txt.replace("month ago", "").trim() + ' mes'
    if (txt.includes('months ago')) return 'hace ' + txt.replace("months ago", "").trim() + ' meses'
    if (txt.includes('year ago')) return 'hace ' + txt.replace("year ago", "").trim() + ' a√±o'
    if (txt.includes('years ago')) return 'hace ' + txt.replace("years ago", "").trim() + ' a√±os'
    if (txt.includes('hour ago')) return 'hace ' + txt.replace("hour ago", "").trim() + ' hora'
    if (txt.includes('hours ago')) return 'hace ' + txt.replace("hours ago", "").trim() + ' horas'
    if (txt.includes('minute ago')) return 'hace ' + txt.replace("minute ago", "").trim() + ' minuto'
    if (txt.includes('minutes ago')) return 'hace ' + txt.replace("minutes ago", "").trim() + ' minutos'
    if (txt.includes('day ago')) return 'hace ' + txt.replace("day ago", "").trim() + ' dia'
    if (txt.includes('days ago')) return 'hace ' + txt.replace("days ago", "").trim() + ' dias'
    return txt
}
